{"ast":null,"code":"var util = require('util'),\n    AbstractGeocoder = require('./abstractgeocoder');\n/**\n * Constructor\n */\n\n\nvar FreegeoipGeocoder = function FreegeoipGeocoder(httpAdapter) {\n  this.supportIPv4 = true;\n  this.supportIPv6 = true;\n  this.supportAddress = false;\n  FreegeoipGeocoder.super_.call(this, httpAdapter);\n};\n\nutil.inherits(FreegeoipGeocoder, AbstractGeocoder); // WS endpoint\n\nFreegeoipGeocoder.prototype._endpoint = 'https://freegeoip.net/json/';\n/**\n* Geocode\n* @param <string>   value    Value to geocode (IP only)\n* @param <function> callback Callback method\n*/\n\nFreegeoipGeocoder.prototype._geocode = function (value, callback) {\n  this.httpAdapter.get(this._endpoint + value, {}, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      results.push({\n        'ip': result.ip,\n        'countryCode': result.country_code,\n        'country': result.country_name,\n        'regionCode': result.region_code,\n        'regionName': result.region_name,\n        'city': result.city,\n        'zipcode': result.zip_code,\n        'timeZone': result.time_zone,\n        'latitude': result.latitude,\n        'longitude': result.longitude,\n        'metroCode': result.metro_code\n      });\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nmodule.exports = FreegeoipGeocoder;","map":null,"metadata":{},"sourceType":"script"}