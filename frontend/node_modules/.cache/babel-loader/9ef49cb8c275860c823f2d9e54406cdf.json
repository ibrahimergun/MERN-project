{"ast":null,"code":"var _jsxFileName = \"/Users/diablo/Desktop/git/MERN-project/frontend/src/places/pages/UserPlaces.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from '../../shared/hook/http-hook';\nimport PlaceList from '../components/PlaceList';\n\nconst UserPlaces = () => {\n  //const { sendRequest, errorHandler, loading, errorMessage } = useHttpClient(); //with errorMessage\n  const {\n    sendRequest,\n    errorHandler,\n    loading\n  } = useHttpClient();\n  const [places, setPlaces] = useState([]);\n  const UserId = useParams().UserId;\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places/users/' + UserId);\n        setPlaces(response.userPlace);\n      } catch (error) {}\n    };\n\n    fetchUsers();\n  }, [UserId, sendRequest]);\n\n  const placeDeletedHandler = deletedId => {\n    setPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedId));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), loading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), !loading && places && /*#__PURE__*/React.createElement(PlaceList, {\n    items: places,\n    onDeletePlace: placeDeletedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), \";\");\n};\n\nexport default UserPlaces;","map":{"version":3,"names":["React","useEffect","useState","useParams","LoadingSpinner","ErrorModal","useHttpClient","PlaceList","UserPlaces","sendRequest","errorHandler","loading","places","setPlaces","UserId","fetchUsers","response","process","env","REACT_APP_BACKEND_URL","userPlace","error","placeDeletedHandler","deletedId","prevPlaces","filter","place","id"],"sources":["/Users/diablo/Desktop/git/MERN-project/frontend/src/places/pages/UserPlaces.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from '../../shared/hook/http-hook';\n\nimport PlaceList from '../components/PlaceList';\n\nconst UserPlaces = () => {\n  //const { sendRequest, errorHandler, loading, errorMessage } = useHttpClient(); //with errorMessage\n  const { sendRequest, errorHandler, loading } = useHttpClient();\n  const [places, setPlaces] = useState([]);\n\n  const UserId = useParams().UserId;\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL +'/places/users/' + UserId,\n        );\n        setPlaces(response.userPlace);\n      } catch (error) {}\n    };\n    fetchUsers();\n  }, [UserId, sendRequest]);\n\n  const placeDeletedHandler = (deletedId) => {\n    setPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletedId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {/* //With error message */}\n      {/* <ErrorModal error={errorMessage} onClear={errorHandler} /> */}\n      <ErrorModal  onClear={errorHandler} />\n      {loading && (\n        <div className='center'>\n          <LoadingSpinner asOverlay />\n        </div>\n      )}\n      {!loading && places && (\n        <PlaceList items={places} onDeletePlace={placeDeletedHandler} />\n      )}\n      ;\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACvB;EACA,MAAM;IAAEC,WAAF;IAAeC,YAAf;IAA6BC;EAA7B,IAAyCL,aAAa,EAA5D;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;EAEA,MAAMY,MAAM,GAAGX,SAAS,GAAGW,MAA3B;EAEAb,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,YAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMP,WAAW,CAChCQ,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAmC,gBAAnC,GAAsDL,MADtB,CAAlC;QAGAD,SAAS,CAACG,QAAQ,CAACI,SAAV,CAAT;MACD,CALD,CAKE,OAAOC,KAAP,EAAc,CAAE;IACnB,CAPD;;IAQAN,UAAU;EACX,CAVQ,EAUN,CAACD,MAAD,EAASL,WAAT,CAVM,CAAT;;EAYA,MAAMa,mBAAmB,GAAIC,SAAD,IAAe;IACzCV,SAAS,CAAEW,UAAD,IACRA,UAAU,CAACC,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaJ,SAA1C,CADO,CAAT;EAGD,CAJD;;EAMA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAGE,oBAAC,UAAD;IAAa,OAAO,EAAEb,YAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,EAIGC,OAAO,iBACN;IAAK,SAAS,EAAC,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,cAAD;IAAgB,SAAS,MAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CALJ,EASG,CAACA,OAAD,IAAYC,MAAZ,iBACC,oBAAC,SAAD;IAAW,KAAK,EAAEA,MAAlB;IAA0B,aAAa,EAAEU,mBAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVJ,MADF;AAgBD,CAzCD;;AA2CA,eAAed,UAAf"},"metadata":{},"sourceType":"module"}