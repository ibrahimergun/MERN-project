{"ast":null,"code":"var _jsxFileName = \"/Users/diablo/Desktop/git/MERN-project/frontend/src/shared/context/Login-Context.js\";\nimport React, { createContext, useState, useCallback } from 'react';\nconst LoginContext = createContext({\n  uid: null,\n  isLoggedIn: false,\n  login: () => {},\n  token: null,\n  logout: () => {}\n});\nexport default LoginContext;\nexport const AuthContextProvider = props => {\n  const [token, setToken] = useState(false);\n  const [uid, setUid] = useState(null);\n  const loginHandler = useCallback((id, token) => {\n    setUid(id);\n    setToken(token);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: id,\n      token: token\n    }));\n  }, []);\n  const logoutHandler = useCallback(() => {\n    setUid(null);\n    setToken(null);\n    localStorage.removeItem('userData');\n  }, []);\n  const contextValue = {\n    uid: uid,\n    token: token,\n    isLoggedIn: !!token,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/React.createElement(LoginContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"names":["React","createContext","useState","useCallback","LoginContext","uid","isLoggedIn","login","token","logout","AuthContextProvider","props","setToken","setUid","loginHandler","id","localStorage","setItem","JSON","stringify","userId","logoutHandler","removeItem","contextValue","children"],"sources":["/Users/diablo/Desktop/git/MERN-project/frontend/src/shared/context/Login-Context.js"],"sourcesContent":["import React, { createContext, useState, useCallback } from 'react';\n\nconst LoginContext = createContext({\n  uid: null,\n  isLoggedIn: false,\n  login: () => {},\n  token: null,\n  logout: () => {},\n});\n\nexport default LoginContext;\n\nexport const AuthContextProvider = (props) => {\n  const [token, setToken] = useState(false);\n  const [uid, setUid] = useState(null);\n\n  const loginHandler = useCallback((id , token) => {\n    setUid(id);\n    setToken(token);\n    localStorage.setItem('userData' , JSON.stringify({userId: id , token: token}));\n  }, []);\n\n  const logoutHandler = useCallback(() => {\n    setUid(null);\n    setToken(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  const contextValue = {\n    uid: uid,\n    token: token,\n    isLoggedIn: !!token,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <LoginContext.Provider value={contextValue}>\n      {props.children}\n    </LoginContext.Provider>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,WAAzC,QAA4D,OAA5D;AAEA,MAAMC,YAAY,GAAGH,aAAa,CAAC;EACjCI,GAAG,EAAE,IAD4B;EAEjCC,UAAU,EAAE,KAFqB;EAGjCC,KAAK,EAAE,MAAM,CAAE,CAHkB;EAIjCC,KAAK,EAAE,IAJ0B;EAKjCC,MAAM,EAAE,MAAM,CAAE;AALiB,CAAD,CAAlC;AAQA,eAAeL,YAAf;AAEA,OAAO,MAAMM,mBAAmB,GAAIC,KAAD,IAAW;EAC5C,MAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACG,GAAD,EAAMQ,MAAN,IAAgBX,QAAQ,CAAC,IAAD,CAA9B;EAEA,MAAMY,YAAY,GAAGX,WAAW,CAAC,CAACY,EAAD,EAAMP,KAAN,KAAgB;IAC/CK,MAAM,CAACE,EAAD,CAAN;IACAH,QAAQ,CAACJ,KAAD,CAAR;IACAQ,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAkCC,IAAI,CAACC,SAAL,CAAe;MAACC,MAAM,EAAEL,EAAT;MAAcP,KAAK,EAAEA;IAArB,CAAf,CAAlC;EACD,CAJ+B,EAI7B,EAJ6B,CAAhC;EAMA,MAAMa,aAAa,GAAGlB,WAAW,CAAC,MAAM;IACtCU,MAAM,CAAC,IAAD,CAAN;IACAD,QAAQ,CAAC,IAAD,CAAR;IACAI,YAAY,CAACM,UAAb,CAAwB,UAAxB;EACD,CAJgC,EAI9B,EAJ8B,CAAjC;EAMA,MAAMC,YAAY,GAAG;IACnBlB,GAAG,EAAEA,GADc;IAEnBG,KAAK,EAAEA,KAFY;IAGnBF,UAAU,EAAE,CAAC,CAACE,KAHK;IAInBD,KAAK,EAAEO,YAJY;IAKnBL,MAAM,EAAEY;EALW,CAArB;EAQA,oBACE,oBAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAEE,YAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGZ,KAAK,CAACa,QADT,CADF;AAKD,CA7BM"},"metadata":{},"sourceType":"module"}