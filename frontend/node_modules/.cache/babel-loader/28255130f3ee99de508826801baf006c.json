{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from '../../shared/hook/http-hook';\nimport PlaceList from '../components/PlaceList';\n\nconst UserPlaces = () => {\n  const {\n    sendRequest,\n    errorHandler,\n    loading,\n    errorMessage\n  } = useHttpClient();\n  const [places, setPlaces] = useState();\n  const UserId = useParams().UserId;\n  console.log(places);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      await sendRequest('http://localhost:5000/api/places/users/' + UserId).then(successfulResponse).catch(error);\n\n      function successfulResponse(response) {\n        setPlaces(response.userPlace);\n        console.log(response);\n      }\n\n      ;\n\n      function error(error) {}\n    };\n\n    fetchUsers();\n  }, [UserId, sendRequest]); // return (\n  //   <React.Fragment>\n  //     {loading && <LoadingSpinner asOverlay />}\n  //     <ErrorModal error={errorMessage} onClear={errorHandler} />\n  //     <PlaceList items={places} />;\n  //   </React.Fragment>\n  // );\n};\n\nexport default UserPlaces;","map":{"version":3,"names":["React","useEffect","useState","useParams","LoadingSpinner","ErrorModal","useHttpClient","PlaceList","UserPlaces","sendRequest","errorHandler","loading","errorMessage","places","setPlaces","UserId","console","log","fetchUsers","then","successfulResponse","catch","error","response","userPlace"],"sources":["/Users/diablo/Desktop/git/MERN-project/frontend/src/places/pages/UserPlaces.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from '../../shared/hook/http-hook';\n\nimport PlaceList from '../components/PlaceList';\n\nconst UserPlaces = () => {\n  const { sendRequest, errorHandler, loading, errorMessage} =\n    useHttpClient();\n    const [places, setPlaces] = useState();\n\n  const UserId = useParams().UserId;\n  \n  console.log(places);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      await sendRequest('http://localhost:5000/api/places/users/' + UserId)\n        .then(successfulResponse)\n        .catch(error);\n\n      function successfulResponse(response) {\n        setPlaces(response.userPlace);\n        console.log(response);\n      };\n\n      function error(error) {}\n    };\n    fetchUsers();\n  }, [UserId, sendRequest]);\n\n  // return (\n  //   <React.Fragment>\n  //     {loading && <LoadingSpinner asOverlay />}\n  //     <ErrorModal error={errorMessage} onClear={errorHandler} />\n  //     <PlaceList items={places} />;\n  //   </React.Fragment>\n  // );\n};\n\nexport default UserPlaces;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACvB,MAAM;IAAEC,WAAF;IAAeC,YAAf;IAA6BC,OAA7B;IAAsCC;EAAtC,IACJN,aAAa,EADf;EAEE,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,EAApC;EAEF,MAAMa,MAAM,GAAGZ,SAAS,GAAGY,MAA3B;EAEAC,OAAO,CAACC,GAAR,CAAYJ,MAAZ;EAEAZ,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAG,YAAY;MAC7B,MAAMT,WAAW,CAAC,4CAA4CM,MAA7C,CAAX,CACHI,IADG,CACEC,kBADF,EAEHC,KAFG,CAEGC,KAFH,CAAN;;MAIA,SAASF,kBAAT,CAA4BG,QAA5B,EAAsC;QACpCT,SAAS,CAACS,QAAQ,CAACC,SAAV,CAAT;QACAR,OAAO,CAACC,GAAR,CAAYM,QAAZ;MACD;;MAAA;;MAED,SAASD,KAAT,CAAeA,KAAf,EAAsB,CAAE;IACzB,CAXD;;IAYAJ,UAAU;EACX,CAdQ,EAcN,CAACH,MAAD,EAASN,WAAT,CAdM,CAAT,CATuB,CAyBvB;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CAhCD;;AAkCA,eAAeD,UAAf"},"metadata":{},"sourceType":"module"}