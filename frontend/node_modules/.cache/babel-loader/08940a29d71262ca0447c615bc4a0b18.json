{"ast":null,"code":"import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialFormInputs, InitialFormValidity) => {\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputs: initialFormInputs,\n    isValid: InitialFormValidity\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatchFormState({\n      type: 'INPUT_CHANGE',\n      inputId: id,\n      value: value,\n      isValid: isValid\n    });\n  }, []);\n  return [formState, inputHandler];\n};","map":{"version":3,"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialFormInputs","InitialFormValidity","formState","dispatchFormState","inputHandler","id"],"sources":["/Users/diablo/Desktop/git/Mern-Project/src/shared/hook/form-hook.js"],"sourcesContent":["import  { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialFormInputs, InitialFormValidity) => {\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputs: initialFormInputs,\n    isValid: InitialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatchFormState({\n      type: 'INPUT_CHANGE',\n      inputId: id,\n      value: value,\n      isValid: isValid,\n    });\n  }, []);\nreturn [formState, inputHandler];\n};\n"],"mappings":"AAAA,SAAUA,WAAV,EAAuBC,UAAvB,QAAyC,OAAzC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,cAAL;MACE,IAAIC,WAAW,GAAG,IAAlB;;MACA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;QAClC,IAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;UAC9BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;QACD,CAFD,MAEO;UACLH,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;QACD;MACF;;MACD,OAAO,EACL,GAAGN,KADE;QAELK,MAAM,EAAE,EACN,GAAGL,KAAK,CAACK,MADH;UAEN,CAACJ,MAAM,CAACG,OAAR,GAAkB;YAAEG,KAAK,EAAEN,MAAM,CAACM,KAAhB;YAAuBD,OAAO,EAAEL,MAAM,CAACK;UAAvC;QAFZ,CAFH;QAMLA,OAAO,EAAEH;MANJ,CAAP;;IAQF;MACE,OAAOH,KAAP;EAnBJ;AAqBD,CAtBD;;AAwBA,OAAO,MAAMQ,OAAO,GAAG,CAACC,iBAAD,EAAoBC,mBAApB,KAA4C;EACjE,MAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAiCd,UAAU,CAACC,WAAD,EAAc;IAC7DM,MAAM,EAAEI,iBADqD;IAE7DH,OAAO,EAAEI;EAFoD,CAAd,CAAjD;EAKA,MAAMG,YAAY,GAAGhB,WAAW,CAAC,CAACiB,EAAD,EAAKP,KAAL,EAAYD,OAAZ,KAAwB;IACvDM,iBAAiB,CAAC;MAChBV,IAAI,EAAE,cADU;MAEhBE,OAAO,EAAEU,EAFO;MAGhBP,KAAK,EAAEA,KAHS;MAIhBD,OAAO,EAAEA;IAJO,CAAD,CAAjB;EAMD,CAP+B,EAO7B,EAP6B,CAAhC;EAQF,OAAO,CAACK,SAAD,EAAYE,YAAZ,CAAP;AACC,CAfM"},"metadata":{},"sourceType":"module"}