{"ast":null,"code":"import { useState, useCallback } from 'react';\nimport axios from 'axios';\n\nconst useHttpClient = () => {\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  const [responseData, setResponseData] = useState();\n  const sendRequest = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    await axios(url, method, body, headers).then(successfulResponse).catch(error);\n\n    function successfulResponse(response) {\n      setLoading(false);\n      setResponseData(response.data);\n    }\n\n    function error(error) {\n      setLoading(false);\n      setErrorMessage(error.response.data.message + ' ' + error.response.status || 'Something went wrong, please try again.');\n      console.log(error.response.data.message, error.response.status || 'Something went wrong, please try again.');\n    }\n  }, []);\n\n  const errorHandler = () => {\n    setErrorMessage(null);\n  };\n\n  return {\n    sendRequest,\n    errorHandler,\n    loading,\n    errorMessage,\n    responseData\n  };\n};\n\nexport default useHttpClient;","map":{"version":3,"names":["useState","useCallback","axios","useHttpClient","loading","setLoading","errorMessage","setErrorMessage","responseData","setResponseData","sendRequest","url","method","body","headers","then","successfulResponse","catch","error","response","data","message","status","console","log","errorHandler"],"sources":["/Users/diablo/Desktop/git/MERN-project/frontend/src/shared/hook/http-hook.js"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport axios from 'axios';\n\nconst useHttpClient = () => {\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  const [responseData , setResponseData] = useState();\n  \n  \n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      await axios(url, method, body, headers)\n        .then(successfulResponse)\n        .catch(error);\n\n      function successfulResponse(response) {\n        setLoading(false);\n        setResponseData(response.data);\n      }\n\n      function error(error) {\n        setLoading(false);\n        setErrorMessage(\n          error.response.data.message + ' ' + error.response.status ||\n            'Something went wrong, please try again.',\n        );\n        console.log(\n          error.response.data.message,\n          error.response.status || 'Something went wrong, please try again.',\n        );\n      }\n    },\n    [],\n  );\n\n  const errorHandler = () => {\n    setErrorMessage(null);\n  };\n  return { sendRequest, errorHandler, loading, errorMessage, responseData };\n};\n\nexport default useHttpClient;\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAC1B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;EACA,MAAM,CAACQ,YAAD,EAAgBC,eAAhB,IAAmCT,QAAQ,EAAjD;EAIA,MAAMU,WAAW,GAAGT,WAAW,CAC7B,gBAAOU,GAAP,EAA0D;IAAA,IAA9CC,MAA8C,uEAArC,KAAqC;IAAA,IAA9BC,IAA8B,uEAAvB,IAAuB;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IACxD,MAAMZ,KAAK,CAACS,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAoBC,OAApB,CAAL,CACHC,IADG,CACEC,kBADF,EAEHC,KAFG,CAEGC,KAFH,CAAN;;IAIA,SAASF,kBAAT,CAA4BG,QAA5B,EAAsC;MACpCd,UAAU,CAAC,KAAD,CAAV;MACAI,eAAe,CAACU,QAAQ,CAACC,IAAV,CAAf;IACD;;IAED,SAASF,KAAT,CAAeA,KAAf,EAAsB;MACpBb,UAAU,CAAC,KAAD,CAAV;MACAE,eAAe,CACbW,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAApB,GAA8B,GAA9B,GAAoCH,KAAK,CAACC,QAAN,CAAeG,MAAnD,IACE,yCAFW,CAAf;MAIAC,OAAO,CAACC,GAAR,CACEN,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OADtB,EAEEH,KAAK,CAACC,QAAN,CAAeG,MAAf,IAAyB,yCAF3B;IAID;EACF,CAtB4B,EAuB7B,EAvB6B,CAA/B;;EA0BA,MAAMG,YAAY,GAAG,MAAM;IACzBlB,eAAe,CAAC,IAAD,CAAf;EACD,CAFD;;EAGA,OAAO;IAAEG,WAAF;IAAee,YAAf;IAA6BrB,OAA7B;IAAsCE,YAAtC;IAAoDE;EAApD,CAAP;AACD,CArCD;;AAuCA,eAAeL,aAAf"},"metadata":{},"sourceType":"module"}