{"ast":null,"code":"var _jsxFileName = \"/Users/diablo/Desktop/git/MERN-project/frontend/src/shared/context/Login-Context.js\";\nimport React, { createContext, useState, useCallback, useEffect } from 'react';\nconst LoginContext = createContext({\n  uid: null,\n  isLoggedIn: false,\n  login: () => {},\n  token: null,\n  logout: () => {}\n});\nexport default LoginContext;\nlet logoutTimer;\nexport const AuthContextProvider = props => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [uid, setUid] = useState(null);\n  const loginHandler = useCallback((id, token, expirationDate) => {\n    setUid(id);\n    setToken(token);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: id,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const logoutHandler = useCallback(() => {\n    setUid(null);\n    setTokenExpirationDate(null);\n    setToken(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logoutHandler, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logoutHandler, tokenExpirationDate]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      loginHandler(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [loginHandler]);\n  const contextValue = {\n    uid: uid,\n    token: token,\n    isLoggedIn: !!token,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/React.createElement(LoginContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"names":["React","createContext","useState","useCallback","useEffect","LoginContext","uid","isLoggedIn","login","token","logout","logoutTimer","AuthContextProvider","props","setToken","tokenExpirationDate","setTokenExpirationDate","setUid","loginHandler","id","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","userId","expiration","toISOString","logoutHandler","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","contextValue","children"],"sources":["/Users/diablo/Desktop/git/MERN-project/frontend/src/shared/context/Login-Context.js"],"sourcesContent":["import React, { createContext, useState, useCallback, useEffect } from 'react';\n\nconst LoginContext = createContext({\n  uid: null,\n  isLoggedIn: false,\n  login: () => {},\n  token: null,\n  logout: () => {},\n});\n\nexport default LoginContext;\n\nlet logoutTimer;\n\nexport const AuthContextProvider = (props) => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [uid, setUid] = useState(null);\n\n  const loginHandler = useCallback((id, token, expirationDate) => {\n    setUid(id);\n    setToken(token);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: id,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      }),\n    );\n  }, []);\n\n  const logoutHandler = useCallback(() => {\n    setUid(null);\n    setTokenExpirationDate(null);\n    setToken(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logoutHandler, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logoutHandler, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      loginHandler(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration),\n      );\n    }\n  }, [loginHandler]);\n\n  const contextValue = {\n    uid: uid,\n    token: token,\n    isLoggedIn: !!token,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <LoginContext.Provider value={contextValue}>\n      {props.children}\n    </LoginContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}