{"ast":null,"code":"import { useState } from 'react';\nimport axios from 'axios';\n\nconst useHttpClient = () => {\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  let responseData;\n\n  const sendRequest = async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    await axios(url, method, body, headers).then(successfulResponse).catch(error);\n\n    function successfulResponse(response) {\n      setLoading(false);\n      responseData = response.data;\n    }\n\n    function error(error) {\n      setLoading(false);\n      setErrorMessage(error.response.data.message + ' ' + error.response.status || 'Something went wrong, please try again.');\n      console.log(error.response.data.message, error.response.status || 'Something went wrong, please try again.');\n    }\n  };\n\n  sendRequest();\n\n  const errorHandler = () => {\n    setErrorMessage(null);\n  };\n\n  return {\n    sendRequest,\n    errorHandler,\n    loading,\n    errorMessage,\n    responseData\n  };\n};\n\nexport default useHttpClient;","map":{"version":3,"names":["useState","axios","useHttpClient","loading","setLoading","errorMessage","setErrorMessage","responseData","sendRequest","url","method","body","headers","then","successfulResponse","catch","error","response","data","message","status","console","log","errorHandler"],"sources":["/Users/diablo/Desktop/git/MERN-project/frontend/src/shared/hook/http-hook.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nconst useHttpClient = () => {\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  let responseData;\n\n  const sendRequest = async (\n    url,\n    method = 'GET',\n    body = null,\n    headers = {},\n  ) => {\n    await axios(url, method, body, headers)\n      .then(successfulResponse)\n      .catch(error);\n\n    function successfulResponse(response) {\n      setLoading(false);\n      responseData = response.data;\n    }\n\n    function error(error) {\n      setLoading(false);\n      setErrorMessage(\n        error.response.data.message + ' ' + error.response.status ||\n          'Something went wrong, please try again.',\n      );\n      console.log(\n        error.response.data.message,\n        error.response.status || 'Something went wrong, please try again.',\n      );\n    }\n  };\n  sendRequest();\n\n  const errorHandler = () => {\n    setErrorMessage(null);\n  };\n  return { sendRequest, errorHandler, loading, errorMessage, responseData };\n};\n\nexport default useHttpClient;\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAC1B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,EAAhD;EACA,IAAIO,YAAJ;;EAEA,MAAMC,WAAW,GAAG,gBAClBC,GADkB,EAKf;IAAA,IAHHC,MAGG,uEAHM,KAGN;IAAA,IAFHC,IAEG,uEAFI,IAEJ;IAAA,IADHC,OACG,uEADO,EACP;IACH,MAAMX,KAAK,CAACQ,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAoBC,OAApB,CAAL,CACHC,IADG,CACEC,kBADF,EAEHC,KAFG,CAEGC,KAFH,CAAN;;IAIA,SAASF,kBAAT,CAA4BG,QAA5B,EAAsC;MACpCb,UAAU,CAAC,KAAD,CAAV;MACAG,YAAY,GAAGU,QAAQ,CAACC,IAAxB;IACD;;IAED,SAASF,KAAT,CAAeA,KAAf,EAAsB;MACpBZ,UAAU,CAAC,KAAD,CAAV;MACAE,eAAe,CACbU,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAApB,GAA8B,GAA9B,GAAoCH,KAAK,CAACC,QAAN,CAAeG,MAAnD,IACE,yCAFW,CAAf;MAIAC,OAAO,CAACC,GAAR,CACEN,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OADtB,EAEEH,KAAK,CAACC,QAAN,CAAeG,MAAf,IAAyB,yCAF3B;IAID;EACF,CA1BD;;EA2BAZ,WAAW;;EAEX,MAAMe,YAAY,GAAG,MAAM;IACzBjB,eAAe,CAAC,IAAD,CAAf;EACD,CAFD;;EAGA,OAAO;IAAEE,WAAF;IAAee,YAAf;IAA6BpB,OAA7B;IAAsCE,YAAtC;IAAoDE;EAApD,CAAP;AACD,CAtCD;;AAwCA,eAAeL,aAAf"},"metadata":{},"sourceType":"module"}