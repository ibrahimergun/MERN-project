{"ast":null,"code":"var _jsxFileName = \"/Users/diablo/Desktop/git/MERN-project/frontend/src/user/pages/Auth.js\";\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hook/http-hook';\nimport './Auth.css';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport { useForm } from '../../shared/hook/form-hook';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoginContext from '../../shared/context/Login-Context';\nimport ImageUpload from '../../shared/components/FormElements/imageUpload';\n\nconst Auth = () => {\n  let history = useHistory();\n  const {\n    sendRequest,\n    errorHandler,\n    loading,\n    errorMessage\n  } = useHttpClient();\n  const {\n    login\n  } = useContext(LoginContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchHandler = () => {\n    if (!isLoginMode) {\n      setData({ ...formState.inputs,\n        name: undefined,\n        image: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const formSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      await sendRequest('http://localhost:5000/api/users/login', 'POST', {\n        email: formState.inputs.email.value,\n        password: formState.inputs.password.value\n      }, {\n        'content-type': 'application/json'\n      }).then(succesfullResponse).catch(error);\n\n      function succesfullResponse(responseData) {\n        console.log(responseData);\n        login(responseData.userId);\n        history.push('/');\n      }\n\n      function error(error) {}\n    } else {\n      const formData = new FormData();\n      formData.append('name', formState.inputs.name.value);\n      formData.append('email', formState.inputs.email.value);\n      formData.append('password', formState.inputs.password.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest('http://localhost:5000/api/users/signup', 'POST', formData).then(succesfullResponse).catch(error);\n\n      function succesfullResponse(responseData) {\n        console.log(responseData);\n        login(responseData.userId);\n        history.push('/');\n      }\n\n      function error(error) {}\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: errorMessage,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, loading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    id: \"name\",\n    element: \"input\",\n    type: \"name\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid Name\",\n    onInput: inputHandler,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), !isLoginMode && /*#__PURE__*/React.createElement(ImageUpload, {\n    center: true,\n    id: \"image\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    type: \"Email\",\n    label: \"Email\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid Email.\",\n    onInput: inputHandler,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onInput: inputHandler,\n    id: \"password\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password (min. 6 characters).\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    to: \"/\",\n    inverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"CANCEL\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: formSubmitHandler,\n    danger: true,\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, isLoginMode ? 'Login' : 'SIGNUP'))), /*#__PURE__*/React.createElement(Button, {\n    onClick: switchHandler,\n    inverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN')));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","useContext","useHistory","ErrorModal","LoadingSpinner","useHttpClient","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","Input","useForm","Card","LoginContext","ImageUpload","Auth","history","sendRequest","errorHandler","loading","errorMessage","login","isLoginMode","setIsLoginMode","formState","inputHandler","setData","email","value","isValid","password","switchHandler","inputs","name","undefined","image","prevMode","formSubmitHandler","event","preventDefault","then","succesfullResponse","catch","error","responseData","console","log","userId","push","formData","FormData","append"],"sources":["/Users/diablo/Desktop/git/MERN-project/frontend/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hook/http-hook';\n\nimport './Auth.css';\n\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport { useForm } from '../../shared/hook/form-hook';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoginContext from '../../shared/context/Login-Context';\nimport ImageUpload from '../../shared/components/FormElements/imageUpload';\n\nconst Auth = () => {\n  let history = useHistory();\n  const { sendRequest, errorHandler, loading, errorMessage } = useHttpClient();\n\n  const { login } = useContext(LoginContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false,\n  );\n\n  const switchHandler = () => {\n    if (!isLoginMode) {\n      setData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid,\n      );\n    } else {\n      setData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n          },\n        },\n        false,\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const formSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      await sendRequest(\n        'http://localhost:5000/api/users/login',\n        'POST',\n        {\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value,\n        },\n        {\n          'content-type': 'application/json',\n        },\n      )\n        .then(succesfullResponse)\n        .catch(error);\n\n      function succesfullResponse(responseData) {\n        console.log(responseData);\n        login(responseData.userId);\n        history.push('/');\n      }\n      function error(error) {}\n    } else {\n      const formData = new FormData();\n      formData.append('name', formState.inputs.name.value);\n      formData.append('email', formState.inputs.email.value);\n      formData.append('password', formState.inputs.password.value);\n      formData.append('image', formState.inputs.image.value);\n\n      await sendRequest(\n        'http://localhost:5000/api/users/signup',\n        'POST',\n        formData,\n      )\n        .then(succesfullResponse)\n        .catch(error);\n      function succesfullResponse(responseData) {\n        console.log(responseData);\n        login(responseData.userId);\n        history.push('/');\n      }\n      function error(error) {}\n    }\n  };\n  return (\n    <React.Fragment>\n      <ErrorModal error={errorMessage} onClear={errorHandler} />\n      <Card className='authentication'>\n        {loading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={formSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              id='name'\n              element='input'\n              type='name'\n              label='Your Name'\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText='Please enter a valid Name'\n              onInput={inputHandler}\n              value=''\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload center id='image' onInput={inputHandler} />\n          )}\n          <Input\n            id='email'\n            element='input'\n            type='Email'\n            label='Email'\n            validators={[VALIDATOR_EMAIL()]}\n            errorText='Please enter a valid Email.'\n            onInput={inputHandler}\n            value=''\n          />\n          <Input\n            onInput={inputHandler}\n            id='password'\n            element='input'\n            type='password'\n            label='Password'\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText='Please enter a valid password (min. 6 characters).'\n            value=''\n          />\n\n          <React.Fragment>\n            <Button to='/' inverse>\n              CANCEL\n            </Button>\n            <Button\n              type='submit'\n              onClick={formSubmitHandler}\n              danger\n              disabled={!formState.isValid}\n            >\n              {isLoginMode ? 'Login' : 'SIGNUP'}\n            </Button>\n          </React.Fragment>\n        </form>\n        <Button onClick={switchHandler} inverse>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}