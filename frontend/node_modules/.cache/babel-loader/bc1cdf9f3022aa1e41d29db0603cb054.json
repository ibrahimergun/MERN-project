{"ast":null,"code":"exports.random = function RRA(local) {\n  function randomInteger(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const NodeGeocoder = require('node-geocoder');\n\n  const fs = require('fs');\n\n  const latin = require('latinize');\n\n  var options = {\n    provider: 'openstreetmap',\n    language: local\n  };\n  var geocoder = NodeGeocoder(options);\n  let latRand = `${randomInteger(10000, 99999)}`;\n  let longRand = `${randomInteger(10000, 99999)}`;\n  let cityArr = [{\n    lat: 48.856578,\n    lng: 2.351828,\n    name: 'Paris'\n  }, {\n    lat: 52.516667,\n    lng: 13.388889,\n    name: 'Berlin'\n  }, {\n    lat: 50.113611,\n    lng: 8.679722,\n    name: 'Frankfurn'\n  }, {\n    lat: 45.463889,\n    lng: 9.191389,\n    name: 'Milan'\n  }, {\n    lat: 41.01224,\n    lng: 28.976018,\n    name: 'Stambul'\n  }, {\n    lat: 51.507222,\n    lng: -0.1275,\n    name: 'London'\n  }, {\n    lat: 40.383333,\n    lng: -3.716667,\n    name: 'Madrid'\n  }, {\n    lat: 41.893056,\n    lng: 12.483333,\n    name: 'Rome'\n  }, {\n    lat: 52.231432,\n    lng: 21.000992,\n    name: 'Warszawa'\n  }, {\n    lat: 43.3142,\n    lng: 5.3984,\n    name: 'Marseille'\n  }, {\n    lat: 45.7585,\n    lng: 4.8445,\n    name: 'Lyon'\n  }, {\n    lat: 48.1094,\n    lng: -1.6740,\n    name: 'Rennes'\n  }, {\n    lat: 48.7780,\n    lng: 9.1768,\n    name: 'Stuttgart'\n  }, {\n    lat: 49.48778,\n    lng: 8.46625,\n    name: 'Mannheim'\n  }, {\n    lat: 51.2290,\n    lng: 6.7842,\n    name: 'Dusselldorf'\n  }, {\n    lat: 51.3352,\n    lng: 12.3795,\n    name: 'Leipzig'\n  }, {\n    lat: 52.4800,\n    lng: -1.8951,\n    name: 'Birmingham'\n  }, {\n    lat: 53.4803,\n    lng: -2.2468,\n    name: 'Manchester'\n  }, {\n    lat: 53.4041,\n    lng: -2.9784,\n    name: 'Liverpool'\n  }, {\n    lat: 53.7598,\n    lng: -2.7065,\n    name: 'Preston'\n  }, {\n    lat: 53.7976,\n    lng: -1.5448,\n    name: 'Leeds'\n  }, {\n    lat: 54.9733,\n    lng: -1.6154,\n    name: 'Newcastle'\n  }, {\n    lat: 43.7736,\n    lng: 11.2551,\n    name: 'Firenze'\n  }, {\n    lat: 40.8458,\n    lng: 14.2375,\n    name: 'Napoli'\n  }, {\n    lat: 41.1149,\n    lng: 16.8712,\n    name: 'Bari'\n  }, {\n    lat: 45.4642,\n    lng: 9.1866,\n    name: 'Milano'\n  }, {\n    lat: 45.4379,\n    lng: 12.3281,\n    name: 'Venezia'\n  }, {\n    lat: 45.0692,\n    lng: 7.6681,\n    name: 'Tourine'\n  }, {\n    lat: 51.507222,\n    lng: -0.1275,\n    name: 'London'\n  }, {\n    lat: 52.4079,\n    lng: 16.9200,\n    name: 'Poznan'\n  }, {\n    lat: 51.1070,\n    lng: 17.0312,\n    name: 'Wroclaw'\n  }, {\n    lat: 50.0621,\n    lng: 19.9372,\n    name: 'Krakow'\n  }, {\n    lat: 54.3493,\n    lng: 18.6404,\n    name: 'Gdansk'\n  }, {\n    lat: 51.4010,\n    lng: 21.1549,\n    name: 'Radom'\n  }, {\n    lat: 51.2492,\n    lng: 22.5676,\n    name: 'Lubline'\n  }, {\n    lat: 54.1615,\n    lng: 19.4048,\n    name: 'Elblag'\n  }];\n  let locData = cityArr[Math.floor(Math.random() * cityArr.length)];\n  let lat = Math.round(locData.lat * 10) / 10;\n  let lng = Math.round(locData.lng * 10) / 10;\n  geocoder.reverse({\n    lat: `${lat + latRand}`,\n    lon: `${lng + longRand}`\n  }).then(function (res) {\n    if (res[0].city == undefined || res[0].country == undefined || res[0].countryCode == undefined || res[0].zipcode == undefined || res[0].streetName == undefined || res[0].streetNumber == undefined || res[0].state == undefined) {\n      RRA(local);\n    } else {\n      let data = {\n        country: latin(res[0].country),\n        short: latin(res[0].countryCode),\n        state: latin(res[0].state),\n        city: latin(res[0].city),\n        street: latin(res[0].streetName),\n        number: latin(res[0].streetNumber),\n        zip: latin(res[0].zipcode)\n      };\n      let jsonData = JSON.stringify(data);\n      fs.writeFile('address.json', jsonData, err => {\n        if (err) {\n          console.log(err);\n        } else {\n          console.log('Success! address.json created');\n        }\n      });\n    }\n  }).catch(function (err) {\n    RRA(local);\n  });\n};\n\nexports.ua = function RRA(local) {\n  function randomInteger(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const NodeGeocoder = require('node-geocoder');\n\n  const fs = require('fs');\n\n  const latin = require('latinize');\n\n  var options = {\n    provider: 'openstreetmap',\n    language: local\n  };\n  var geocoder = NodeGeocoder(options);\n  let latRand = `${randomInteger(10000, 99999)}`;\n  let longRand = `${randomInteger(10000, 99999)}`;\n  let cityArr = [{\n    lat: 50.0673,\n    lng: 31.4450,\n    name: 'Pereyaslav-Khm.'\n  }, {\n    lat: 49.99159,\n    lng: 36.23178,\n    name: 'Harkiv'\n  }, {\n    lat: 48.4717,\n    lng: 35.0157,\n    name: 'Dnipro'\n  }, {\n    lat: 46.47234,\n    lng: 30.71175,\n    name: 'Odessa'\n  }, {\n    lat: 49.23325,\n    lng: 28.47913,\n    name: 'Vinnica'\n  }, {\n    lat: 49.84221,\n    lng: 24.03228,\n    name: 'Lviv'\n  }, {\n    lat: 50.62229,\n    lng: 26.24897,\n    name: 'Rivne'\n  }, {\n    lat: 51.4940,\n    lng: 31.2872,\n    name: 'Chernihiv'\n  }, {\n    lat: 47.8508,\n    lng: 35.1176,\n    name: 'Zaporizhya'\n  }, {\n    lat: 46.6455,\n    lng: 32.6024,\n    name: 'Kherson'\n  }];\n  let locData = cityArr[Math.floor(Math.random() * cityArr.length)];\n  let lat = Math.round(locData.lat * 10) / 10;\n  let lng = Math.round(locData.lng * 10) / 10;\n  geocoder.reverse({\n    lat: `${lat + latRand}`,\n    lon: `${lng + longRand}`\n  }).then(function (res) {\n    if (res[0].city == undefined || res[0].country == undefined || res[0].countryCode == undefined || res[0].zipcode == undefined || res[0].streetName == undefined || res[0].streetNumber == undefined || res[0].state == undefined) {\n      RRA(local);\n    } else {\n      if (local == 'ru' || local == 'ua' || local == undefined) {\n        // RESULT RU-other\n        let data = {\n          country: res[0].country,\n          short: res[0].countryCode,\n          state: res[0].state,\n          city: res[0].city,\n          street: res[0].streetName,\n          number: res[0].streetNumber,\n          zip: res[0].zipcode\n        };\n        let jsonData = JSON.stringify(data);\n        fs.writeFile('address.json', jsonData, err => {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log('Success! address.json created');\n          }\n        });\n      } else {\n        if (/[а-яА-ЯЁё]/.test(JSON.stringify(res)) == true) {\n          RRA(local);\n        } else {\n          // RESULT non-RU\n          let data = {\n            country: latin(res[0].country),\n            short: latin(res[0].countryCode),\n            state: latin(res[0].state),\n            city: latin(res[0].city),\n            street: latin(res[0].streetName),\n            number: latin(res[0].streetNumber),\n            zip: latin(res[0].zipcode)\n          };\n          let jsonData = JSON.stringify(data);\n          fs.writeFile('address.json', jsonData, err => {\n            if (err) {\n              console.log(err);\n            } else {\n              console.log('Success! address.json created');\n            }\n          });\n        }\n      }\n    }\n  }).catch(function (err) {\n    RRA(local);\n  });\n};\n\nexports.fr = function RRA(local) {\n  function randomInteger(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const NodeGeocoder = require('node-geocoder');\n\n  const fs = require('fs');\n\n  const latin = require('latinize');\n\n  var options = {\n    provider: 'openstreetmap',\n    language: local\n  };\n  var geocoder = NodeGeocoder(options);\n  let latRand = `${randomInteger(10000, 99999)}`;\n  let longRand = `${randomInteger(10000, 99999)}`;\n  let cityArr = [{\n    lat: 43.3142,\n    lng: 5.3984,\n    name: 'Marseille'\n  }, {\n    lat: 45.7585,\n    lng: 4.8445,\n    name: 'Lyon'\n  }, {\n    lat: 48.1094,\n    lng: -1.6740,\n    name: 'Rennes'\n  }, {\n    lat: 48.856578,\n    lng: 2.351828,\n    name: 'Paris'\n  }];\n  let locData = cityArr[Math.floor(Math.random() * cityArr.length)];\n  let lat = Math.round(locData.lat * 10) / 10;\n  let lng = Math.round(locData.lng * 10) / 10;\n  geocoder.reverse({\n    lat: `${lat + latRand}`,\n    lon: `${lng + longRand}`\n  }).then(function (res) {\n    if (res[0].city == undefined || res[0].country == undefined || res[0].countryCode == undefined || res[0].zipcode == undefined || res[0].streetName == undefined || res[0].streetNumber == undefined || res[0].state == undefined) {\n      RRA(local);\n    } else {\n      if (local == 'ru' || local == 'ua' || local == undefined) {\n        // RESULT RU-other\n        let data = {\n          country: res[0].country,\n          short: res[0].countryCode,\n          state: res[0].state,\n          city: res[0].city,\n          street: res[0].streetName,\n          number: res[0].streetNumber,\n          zip: res[0].zipcode\n        };\n        let jsonData = JSON.stringify(data);\n        fs.writeFile('address.json', jsonData, err => {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log('Success! address.json created');\n          }\n        });\n      } else {\n        if (/[а-яА-ЯЁё]/.test(JSON.stringify(res)) == true) {\n          RRA(local);\n        } else {\n          // RESULT non-RU\n          let data = {\n            country: latin(res[0].country),\n            short: latin(res[0].countryCode),\n            state: latin(res[0].state),\n            city: latin(res[0].city),\n            street: latin(res[0].streetName),\n            number: latin(res[0].streetNumber),\n            zip: latin(res[0].zipcode)\n          };\n          let jsonData = JSON.stringify(data);\n          fs.writeFile('address.json', jsonData, err => {\n            if (err) {\n              console.log(err);\n            } else {\n              console.log('Success! address.json created');\n            }\n          });\n        }\n      }\n    }\n  }).catch(function (err) {\n    RRA(local);\n  });\n};\n\nexports.de = function RRA(local) {\n  function randomInteger(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const NodeGeocoder = require('node-geocoder');\n\n  const fs = require('fs');\n\n  const latin = require('latinize');\n\n  var options = {\n    provider: 'openstreetmap',\n    language: local\n  };\n  var geocoder = NodeGeocoder(options);\n  let latRand = `${randomInteger(10000, 99999)}`;\n  let longRand = `${randomInteger(10000, 99999)}`;\n  let cityArr = [{\n    lat: 48.7780,\n    lng: 9.1768,\n    name: 'Stuttgart'\n  }, {\n    lat: 49.48778,\n    lng: 8.46625,\n    name: 'Mannheim'\n  }, {\n    lat: 51.2290,\n    lng: 6.7842,\n    name: 'Dusselldorf'\n  }, {\n    lat: 51.3352,\n    lng: 12.3795,\n    name: 'Leipzig'\n  }, {\n    lat: 52.516667,\n    lng: 13.388889,\n    name: 'Berlin'\n  } // {\n  //     lat: 50.113611,\n  //     lng: 8.679722,\n  //     name: 'Frankfurt'\n  // }\n  ];\n  let locData = cityArr[Math.floor(Math.random() * cityArr.length)];\n  let lat = Math.round(locData.lat * 10) / 10;\n  let lng = Math.round(locData.lng * 10) / 10;\n  geocoder.reverse({\n    lat: `${lat + latRand}`,\n    lon: `${lng + longRand}`\n  }).then(function (res) {\n    if (res[0].city == undefined || res[0].country == undefined || res[0].countryCode == undefined || res[0].zipcode == undefined || res[0].streetName == undefined || res[0].streetNumber == undefined || res[0].state == undefined) {\n      RRA(local);\n    } else {\n      if (local == 'ru' || local == 'ua' || local == undefined) {\n        // RESULT RU-other\n        let data = {\n          country: res[0].country,\n          short: res[0].countryCode,\n          state: res[0].state,\n          city: res[0].city,\n          street: res[0].streetName,\n          number: res[0].streetNumber,\n          zip: res[0].zipcode\n        };\n        let jsonData = JSON.stringify(data);\n        fs.writeFile('address.json', jsonData, err => {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log('Success! address.json created');\n          }\n        });\n      } else {\n        if (/[а-яА-ЯЁё]/.test(JSON.stringify(res)) == true) {\n          RRA(local);\n        } else {\n          // RESULT non-RU\n          let data = {\n            country: latin(res[0].country),\n            short: latin(res[0].countryCode),\n            state: latin(res[0].state),\n            city: latin(res[0].city),\n            street: latin(res[0].streetName),\n            number: latin(res[0].streetNumber),\n            zip: latin(res[0].zipcode)\n          };\n          let jsonData = JSON.stringify(data);\n          fs.writeFile('address.json', jsonData, err => {\n            if (err) {\n              console.log(err);\n            } else {\n              console.log('Success! address.json created');\n            }\n          });\n        }\n      }\n    }\n  }).catch(function (err) {\n    RRA(local);\n  });\n};\n\nexports.uk = function RRA(local) {\n  function randomInteger(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const NodeGeocoder = require('node-geocoder');\n\n  const fs = require('fs');\n\n  const latin = require('latinize');\n\n  var options = {\n    provider: 'openstreetmap',\n    language: local\n  };\n  var geocoder = NodeGeocoder(options);\n  let latRand = `${randomInteger(10000, 99999)}`;\n  let longRand = `${randomInteger(10000, 99999)}`;\n  let cityArr = [{\n    lat: 52.4800,\n    lng: -1.8951,\n    name: 'Birmingham'\n  }, {\n    lat: 53.4803,\n    lng: -2.2468,\n    name: 'Manchester'\n  }, {\n    lat: 53.4041,\n    lng: -2.9784,\n    name: 'Liverpool'\n  }, {\n    lat: 53.7598,\n    lng: -2.7065,\n    name: 'Preston'\n  }, {\n    lat: 53.7976,\n    lng: -1.5448,\n    name: 'Leeds'\n  }, {\n    lat: 54.9733,\n    lng: -1.6154,\n    name: 'Newcastle'\n  }, {\n    lat: 51.507222,\n    lng: -0.1275,\n    name: 'London'\n  }];\n  let locData = cityArr[Math.floor(Math.random() * cityArr.length)];\n  let lat = Math.round(locData.lat * 10) / 10;\n  let lng = Math.round(locData.lng * 10) / 10;\n  geocoder.reverse({\n    lat: `${lat + latRand}`,\n    lon: `${lng + longRand}`\n  }).then(function (res) {\n    if (res[0].city == undefined || res[0].country == undefined || res[0].countryCode == undefined || res[0].zipcode == undefined || res[0].streetName == undefined || res[0].streetNumber == undefined || res[0].state == undefined) {\n      RRA(local);\n    } else {\n      if (local == 'ru' || local == 'ua' || local == undefined) {\n        // RESULT RU-other\n        let data = {\n          country: res[0].country,\n          short: res[0].countryCode,\n          state: res[0].state,\n          city: res[0].city,\n          street: res[0].streetName,\n          number: res[0].streetNumber,\n          zip: res[0].zipcode\n        };\n        let jsonData = JSON.stringify(data);\n        fs.writeFile('address.json', jsonData, err => {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log('Success! address.json created');\n          }\n        });\n      } else {\n        if (/[а-яА-ЯЁё]/.test(JSON.stringify(res)) == true) {\n          RRA(local);\n        } else {\n          // RESULT non-RU\n          let data = {\n            country: latin(res[0].country),\n            short: latin(res[0].countryCode),\n            state: latin(res[0].state),\n            city: latin(res[0].city),\n            street: latin(res[0].streetName),\n            number: latin(res[0].streetNumber),\n            zip: latin(res[0].zipcode)\n          };\n          let jsonData = JSON.stringify(data);\n          fs.writeFile('address.json', jsonData, err => {\n            if (err) {\n              console.log(err);\n            } else {\n              console.log('Success! address.json created');\n            }\n          });\n        }\n      }\n    }\n  }).catch(function (err) {\n    RRA(local);\n  });\n};\n\nexports.it = function RRA(local) {\n  function randomInteger(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const NodeGeocoder = require('node-geocoder');\n\n  const fs = require('fs');\n\n  const latin = require('latinize');\n\n  var options = {\n    provider: 'openstreetmap',\n    language: local\n  };\n  var geocoder = NodeGeocoder(options);\n  let latRand = `${randomInteger(10000, 99999)}`;\n  let longRand = `${randomInteger(10000, 99999)}`;\n  let cityArr = [{\n    lat: 43.7736,\n    lng: 11.2551,\n    name: 'Firenze'\n  }, {\n    lat: 40.8458,\n    lng: 14.2375,\n    name: 'Napoli'\n  }, {\n    lat: 41.1149,\n    lng: 16.8712,\n    name: 'Bari'\n  }, {\n    lat: 45.4642,\n    lng: 9.1866,\n    name: 'Milano'\n  }, {\n    lat: 45.4379,\n    lng: 12.3281,\n    name: 'Venezia'\n  }, {\n    lat: 45.0692,\n    lng: 7.6681,\n    name: 'Tourine'\n  }, {\n    lat: 41.893056,\n    lng: 12.483333,\n    name: 'Rome'\n  }];\n  let locData = cityArr[Math.floor(Math.random() * cityArr.length)];\n  let lat = Math.round(locData.lat * 10) / 10;\n  let lng = Math.round(locData.lng * 10) / 10;\n  geocoder.reverse({\n    lat: `${lat + latRand}`,\n    lon: `${lng + longRand}`\n  }).then(function (res) {\n    if (res[0].city == undefined || res[0].country == undefined || res[0].countryCode == undefined || res[0].zipcode == undefined || res[0].streetName == undefined || res[0].streetNumber == undefined || res[0].state == undefined) {\n      RRA(local);\n    } else {\n      if (local == 'ru' || local == 'ua' || local == undefined) {\n        // RESULT RU-other\n        let data = {\n          country: res[0].country,\n          short: res[0].countryCode,\n          state: res[0].state,\n          city: res[0].city,\n          street: res[0].streetName,\n          number: res[0].streetNumber,\n          zip: res[0].zipcode\n        };\n        let jsonData = JSON.stringify(data);\n        fs.writeFile('address.json', jsonData, err => {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log('Success! address.json created');\n          }\n        });\n      } else {\n        if (/[а-яА-ЯЁё]/.test(JSON.stringify(res)) == true) {\n          RRA(local);\n        } else {\n          // RESULT non-RU\n          let data = {\n            country: latin(res[0].country),\n            short: latin(res[0].countryCode),\n            state: latin(res[0].state),\n            city: latin(res[0].city),\n            street: latin(res[0].streetName),\n            number: latin(res[0].streetNumber),\n            zip: latin(res[0].zipcode)\n          };\n          let jsonData = JSON.stringify(data);\n          fs.writeFile('address.json', jsonData, err => {\n            if (err) {\n              console.log(err);\n            } else {\n              console.log('Success! address.json created');\n            }\n          });\n        }\n      }\n    }\n  }).catch(function (err) {\n    RRA(local);\n  });\n};\n\nexports.pl = function RRA(local) {\n  function randomInteger(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const NodeGeocoder = require('node-geocoder');\n\n  const fs = require('fs');\n\n  const latin = require('latinize');\n\n  var options = {\n    provider: 'openstreetmap',\n    language: local\n  };\n  var geocoder = NodeGeocoder(options);\n  let latRand = `${randomInteger(10000, 99999)}`;\n  let longRand = `${randomInteger(10000, 99999)}`;\n  let cityArr = [{\n    lat: 52.4079,\n    lng: 16.9200,\n    name: 'Poznan'\n  }, {\n    lat: 51.1070,\n    lng: 17.0312,\n    name: 'Wroclaw'\n  }, {\n    lat: 50.0621,\n    lng: 19.9372,\n    name: 'Krakow'\n  }, {\n    lat: 54.3493,\n    lng: 18.6404,\n    name: 'Gdansk'\n  }, {\n    lat: 51.4010,\n    lng: 21.1549,\n    name: 'Radom'\n  }, {\n    lat: 51.2492,\n    lng: 22.5676,\n    name: 'Lubline'\n  }, {\n    lat: 54.1615,\n    lng: 19.4048,\n    name: 'Elblag'\n  }, {\n    lat: 52.231432,\n    lng: 21.000992,\n    name: 'Warszawa'\n  }];\n  let locData = cityArr[Math.floor(Math.random() * cityArr.length)];\n  let lat = Math.round(locData.lat * 10) / 10;\n  let lng = Math.round(locData.lng * 10) / 10;\n  geocoder.reverse({\n    lat: `${lat + latRand}`,\n    lon: `${lng + longRand}`\n  }).then(function (res) {\n    if (res[0].city == undefined || res[0].country == undefined || res[0].countryCode == undefined || res[0].zipcode == undefined || res[0].streetName == undefined || res[0].streetNumber == undefined || res[0].state == undefined) {\n      RRA(local);\n    } else {\n      if (local == 'ru' || local == 'ua' || local == undefined) {\n        // RESULT RU-other\n        let data = {\n          country: latin(res[0].country),\n          short: latin(res[0].countryCode),\n          state: latin(res[0].state),\n          city: latin(res[0].city),\n          street: latin(res[0].streetName),\n          number: latin(res[0].streetNumber),\n          zip: latin(res[0].zipcode)\n        };\n        let jsonData = JSON.stringify(data);\n        fs.writeFile('address.json', jsonData, err => {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log('Success! address.json created');\n          }\n        });\n      } else {\n        if (/[а-яА-ЯЁё]/.test(JSON.stringify(res)) == true) {\n          RRA(local);\n        } else {\n          // RESULT non-RU\n          let data = {\n            country: res[0].country,\n            short: res[0].countryCode,\n            state: res[0].state,\n            city: res[0].city,\n            street: res[0].streetName,\n            number: res[0].streetNumber,\n            zip: res[0].zipcode\n          };\n          let jsonData = JSON.stringify(data);\n          fs.writeFile('address.json', jsonData, err => {\n            if (err) {\n              console.log(err);\n            } else {\n              console.log('Success! address.json created');\n            }\n          });\n        }\n      }\n    }\n  }).catch(function (err) {\n    RRA(local);\n  });\n};\n\nexports.nl = function RRA(local) {\n  function randomInteger(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const NodeGeocoder = require('node-geocoder');\n\n  const fs = require('fs');\n\n  const latin = require('latinize');\n\n  var options = {\n    provider: 'openstreetmap',\n    language: local\n  };\n  var geocoder = NodeGeocoder(options);\n  let latRand = `${randomInteger(10000, 99999)}`;\n  let longRand = `${randomInteger(10000, 99999)}`;\n  let cityArr = [{\n    lat: 52.372763,\n    lng: 4.893148,\n    name: 'Amsterdam'\n  }, {\n    lat: 51.923706,\n    lng: 4.477322,\n    name: 'Rotterdam'\n  }, {\n    lat: 52.220592,\n    lng: 6.895484,\n    name: 'Enschede'\n  }];\n  let locData = cityArr[Math.floor(Math.random() * cityArr.length)];\n  let lat = Math.round(locData.lat * 10) / 10;\n  let lng = Math.round(locData.lng * 10) / 10;\n  geocoder.reverse({\n    lat: `${lat + latRand}`,\n    lon: `${lng + longRand}`\n  }).then(function (res) {\n    if (res[0].city == undefined || res[0].country == undefined || res[0].countryCode == undefined || res[0].zipcode == undefined || res[0].streetName == undefined || res[0].streetNumber == undefined || res[0].state == undefined) {\n      RRA(local);\n    } else {\n      if (local == 'ru' || local == 'ua' || local == undefined) {\n        // RESULT RU-other\n        let data = {\n          country: res[0].country,\n          short: res[0].countryCode,\n          state: res[0].state,\n          city: res[0].city,\n          street: res[0].streetName,\n          number: res[0].streetNumber,\n          zip: res[0].zipcode\n        };\n        let jsonData = JSON.stringify(data);\n        fs.writeFile('address.json', jsonData, err => {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log('Success! address.json created');\n          }\n        });\n      } else {\n        if (/[а-яА-ЯЁё]/.test(JSON.stringify(res)) == true) {\n          RRA(local);\n        } else {\n          // RESULT non-RU\n          let data = {\n            country: latin(res[0].country),\n            short: latin(res[0].countryCode),\n            state: latin(res[0].state),\n            city: latin(res[0].city),\n            street: latin(res[0].streetName),\n            number: latin(res[0].streetNumber),\n            zip: latin(res[0].zipcode)\n          };\n          let jsonData = JSON.stringify(data);\n          fs.writeFile('address.json', jsonData, err => {\n            if (err) {\n              console.log(err);\n            } else {\n              console.log('Success! address.json created');\n            }\n          });\n        }\n      }\n    }\n  }).catch(function (err) {\n    RRA(local);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}