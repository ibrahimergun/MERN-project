{"ast":null,"code":"var _jsxFileName = \"/Users/diablo/Desktop/git/MERN-project/frontend/src/shared/components/FormElements/imageUpload.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport './imageUpload.css';\nimport Button from './Button';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const [filesUrl, setFilesUrl] = useState();\n  const pickImageRef = useRef();\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setFilesUrl(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (event.target.files && event.target.files.length === 1) {\n      setIsValid(true);\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    pickImageRef.current.click();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    style: {\n      display: 'none'\n    },\n    id: props.id,\n    accept: \".jpg, .png, .jpeg\",\n    ref: pickImageRef,\n    onChange: pickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `image-upload ${props.center && 'center'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-upload__preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, filesUrl && /*#__PURE__*/React.createElement(\"img\", {\n    src: filesUrl,\n    alt: \"Preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }\n  }), !filesUrl && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Please pick an image.\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: pickImageHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"PICK IMAGE\", ' ')), !isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }\n  }, props.errorText));\n};\n\nexport default ImageUpload;","map":{"version":3,"names":["React","useRef","useState","useEffect","Button","ImageUpload","props","file","setFile","isValid","setIsValid","filesUrl","setFilesUrl","pickImageRef","fileReader","FileReader","onload","result","readAsDataURL","pickHandler","event","pickedFile","fileIsValid","target","files","length","onInput","id","pickImageHandler","current","click","display","center","errorText"],"sources":["/Users/diablo/Desktop/git/MERN-project/frontend/src/shared/components/FormElements/imageUpload.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nimport './imageUpload.css';\nimport Button from './Button';\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const [filesUrl, setFilesUrl] = useState();\n  const pickImageRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setFilesUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      setIsValid(true);\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    pickImageRef.current.click();\n  };\n\n  return (\n    <div className='form-control'>\n      <input\n        type='file'\n        style={{ display: 'none' }}\n        id={props.id}\n        accept='.jpg, .png, .jpeg'\n        ref={pickImageRef}\n        onChange={pickHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className='image-upload__preview'>\n          {filesUrl && <img src={filesUrl} alt='Preview' />}\n          {!filesUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type='button' onClick={pickImageHandler}>\n          PICK IMAGE{' '}\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAC7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,EAAxC;EACA,MAAMW,YAAY,GAAGZ,MAAM,EAA3B;EAEAE,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,IAAL,EAAW;MACT;IACD;;IACD,MAAMO,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;IACAD,UAAU,CAACE,MAAX,GAAoB,MAAM;MACxBJ,WAAW,CAACE,UAAU,CAACG,MAAZ,CAAX;IACD,CAFD;;IAGAH,UAAU,CAACI,aAAX,CAAyBX,IAAzB;EACD,CATQ,EASN,CAACA,IAAD,CATM,CAAT;;EAWA,MAAMY,WAAW,GAAIC,KAAD,IAAW;IAC7B,IAAIC,UAAJ;IACA,IAAIC,WAAW,GAAGb,OAAlB;;IACA,IAAIW,KAAK,CAACG,MAAN,CAAaC,KAAb,IAAsBJ,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAxD,EAA2D;MACzDf,UAAU,CAAC,IAAD,CAAV;MACAW,UAAU,GAAGD,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;MACAhB,OAAO,CAACa,UAAD,CAAP;MACAC,WAAW,GAAG,IAAd;IACD,CALD,MAKO;MACLZ,UAAU,CAAC,KAAD,CAAV;MACAY,WAAW,GAAG,KAAd;IACD;;IACDhB,KAAK,CAACoB,OAAN,CAAcpB,KAAK,CAACqB,EAApB,EAAwBN,UAAxB,EAAoCC,WAApC;EACD,CAbD;;EAeA,MAAMM,gBAAgB,GAAG,MAAM;IAC7Bf,YAAY,CAACgB,OAAb,CAAqBC,KAArB;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,cAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IACE,IAAI,EAAC,MADP;IAEE,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAX,CAFT;IAGE,EAAE,EAAEzB,KAAK,CAACqB,EAHZ;IAIE,MAAM,EAAC,mBAJT;IAKE,GAAG,EAAEd,YALP;IAME,QAAQ,EAAEM,WANZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eASE;IAAK,SAAS,EAAG,gBAAeb,KAAK,CAAC0B,MAAN,IAAgB,QAAS,EAAzD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,uBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGrB,QAAQ,iBAAI;IAAK,GAAG,EAAEA,QAAV;IAAoB,GAAG,EAAC,SAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADf,EAEG,CAACA,QAAD,iBAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2BAFhB,CADF,eAKE,oBAAC,MAAD;IAAQ,IAAI,EAAC,QAAb;IAAsB,OAAO,EAAEiB,gBAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBACa,GADb,CALF,CATF,EAkBG,CAACnB,OAAD,iBAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIH,KAAK,CAAC2B,SAAV,CAlBf,CADF;AAsBD,CA1DD;;AA4DA,eAAe5B,WAAf"},"metadata":{},"sourceType":"module"}