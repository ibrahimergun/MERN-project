{"ast":null,"code":"var _jsxFileName = \"/Users/diablo/Desktop/git/MERN-project/frontend/src/places/pages/NewPlace.js\";\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './PlaceForm.css';\nimport LoginContext from '../../shared/context/Login-Context';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport Input from '../../shared/components/FormElements/Input';\nimport { useHttpClient } from '../../shared/hook/http-hook';\nimport Button from '../../shared/components/FormElements/Button.js';\nimport { useForm } from '../../shared/hook/form-hook';\nimport ImageUpload from '../../shared/components/FormElements/imageUpload';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\n\nconst NewPlace = () => {\n  const {\n    uid,\n    token\n  } = useContext(LoginContext);\n  const {\n    sendRequest,\n    errorHandler,\n    loading,\n    errorMessage\n  } = useHttpClient();\n  const history = useHistory();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    },\n    image: {\n      value: null,\n      isValid: false\n    }\n  }, false);\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', formState.inputs.title.value);\n    formData.append('description', formState.inputs.description.value);\n    formData.append('address', formState.inputs.address.value);\n    formData.append('image', formState.inputs.image.value);\n    formData.append('creator', uid);\n    await sendRequest('http://localhost:5000/api/places/', 'POST', {\n      Authorization: 'Bareer' + token\n    }, formData).then(successfulResponse).catch(error);\n\n    function successfulResponse(response) {\n      history.push('/');\n    }\n\n    function error(error) {}\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: errorMessage,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, loading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    onInput: inputHandler,\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ImageUpload, {\n    center: true,\n    id: \"image\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onInput: inputHandler,\n    id: \"description\",\n    element: \"textarea\",\n    type: \"text\",\n    label: \"description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description(at least 5 characters)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onInput: inputHandler,\n    id: \"address\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Address\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Add Place\")));\n};\n\nexport default NewPlace;","map":{"version":3,"names":["React","useContext","useHistory","LoginContext","LoadingSpinner","ErrorModal","Input","useHttpClient","Button","useForm","ImageUpload","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","NewPlace","uid","token","sendRequest","errorHandler","loading","errorMessage","history","formState","inputHandler","title","value","isValid","description","address","image","submitHandler","event","preventDefault","formData","FormData","append","inputs","Authorization","then","successfulResponse","catch","error","response","push"],"sources":["/Users/diablo/Desktop/git/MERN-project/frontend/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './PlaceForm.css';\nimport LoginContext from '../../shared/context/Login-Context';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport Input from '../../shared/components/FormElements/Input';\nimport { useHttpClient } from '../../shared/hook/http-hook';\nimport Button from '../../shared/components/FormElements/Button.js';\nimport { useForm } from '../../shared/hook/form-hook';\nimport ImageUpload from '../../shared/components/FormElements/imageUpload';\n\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\n\nconst NewPlace = () => {\n  const { uid, token } = useContext(LoginContext);\n\n  const { sendRequest, errorHandler, loading, errorMessage } = useHttpClient();\n  const history = useHistory();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n      address: {\n        value: '',\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false,\n  );\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', formState.inputs.title.value);\n    formData.append('description', formState.inputs.description.value);\n    formData.append('address', formState.inputs.address.value);\n    formData.append('image', formState.inputs.image.value);\n    formData.append('creator', uid);\n\n    await sendRequest(\n      'http://localhost:5000/api/places/',\n      'POST',\n      { Authorization: 'Bareer' + token },\n      formData,\n    )\n      .then(successfulResponse)\n      .catch(error);\n\n    function successfulResponse(response) {\n      history.push('/');\n    }\n    function error(error) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={errorMessage} onClear={errorHandler} />\n      <form className='place-form' onSubmit={submitHandler}>\n        {loading && <LoadingSpinner asOverlay />}\n        <Input\n          id='title'\n          onInput={inputHandler}\n          element='input'\n          type='text'\n          label='Title'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid title'\n        />\n        <ImageUpload center id='image' onInput={inputHandler} />\n        <Input\n          onInput={inputHandler}\n          id='description'\n          element='textarea'\n          type='text'\n          label='description'\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText='Please enter a valid description(at least 5 characters)'\n        />\n        <Input\n          onInput={inputHandler}\n          id='address'\n          element='input'\n          type='text'\n          label='Address'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid address'\n        />\n        <Button type='submit' disabled={!formState.isValid}>\n          Add Place\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\nexport default NewPlace;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}