{"ast":null,"code":"var _jsxFileName = \"/Users/diablo/Desktop/git/Mern-Project/src/shared/components/FormElements/Input.js\";\nimport React, { useReducer } from 'react';\nimport './Input.css';\nimport { validate } from '../../util/validators';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.value,\n        isValid: validate(action.value, action.validators)\n      };\n\n    case 'NULL':\n      return { ...state,\n        value: '',\n        isValid: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.value || '',\n    isValid: props.isValid || true\n  });\n\n  const inputHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      value: event.target.value,\n      isValid: true,\n      validators: props.validators\n    });\n\n    if (event.target.value.length === 0) {\n      dispatch({\n        type: 'NULL'\n      });\n    }\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: inputHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: inputHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, props.label), element, !inputState.isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"names":["React","useReducer","validate","inputReducer","state","action","type","value","isValid","validators","Input","props","inputState","dispatch","inputHandler","event","target","length","element","id","placeholder","rows","label","errorText"],"sources":["/Users/diablo/Desktop/git/Mern-Project/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer } from 'react';\n\nimport './Input.css';\nimport { validate } from '../../util/validators';\n\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.value,\n        isValid: validate(action.value, action.validators),\n      };\n    case 'NULL':\n      return {\n        ...state,\n        value: '',\n        isValid: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.value || '',\n    isValid: props.isValid || true,\n  });\n\n  const inputHandler = (event) => {\n    dispatch({\n      type: 'CHANGE',\n      value: event.target.value,\n      isValid: true,\n      validators: props.validators,\n    });\n\n    if (event.target.value.length === 0) {\n      dispatch({\n        type: 'NULL',\n      });\n    }\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={inputHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={inputHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && 'form-control--invalid'\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAGA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACtC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,QAAL;MACE,OAAO,EACL,GAAGF,KADE;QAELG,KAAK,EAAEF,MAAM,CAACE,KAFT;QAGLC,OAAO,EAAEN,QAAQ,CAACG,MAAM,CAACE,KAAR,EAAeF,MAAM,CAACI,UAAtB;MAHZ,CAAP;;IAKF,KAAK,MAAL;MACE,OAAO,EACL,GAAGL,KADE;QAELG,KAAK,EAAE,EAFF;QAGLC,OAAO,EAAE;MAHJ,CAAP;;IAKF;MACE,OAAOJ,KAAP;EAdJ;AAgBD,CAjBD;;AAmBA,MAAMM,KAAK,GAAIC,KAAD,IAAW;EACvB,MAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBZ,UAAU,CAACE,YAAD,EAAe;IACtDI,KAAK,EAAEI,KAAK,CAACJ,KAAN,IAAe,EADgC;IAEtDC,OAAO,EAAEG,KAAK,CAACH,OAAN,IAAiB;EAF4B,CAAf,CAAzC;;EAKA,MAAMM,YAAY,GAAIC,KAAD,IAAW;IAC9BF,QAAQ,CAAC;MACPP,IAAI,EAAE,QADC;MAEPC,KAAK,EAAEQ,KAAK,CAACC,MAAN,CAAaT,KAFb;MAGPC,OAAO,EAAE,IAHF;MAIPC,UAAU,EAAEE,KAAK,CAACF;IAJX,CAAD,CAAR;;IAOA,IAAIM,KAAK,CAACC,MAAN,CAAaT,KAAb,CAAmBU,MAAnB,KAA8B,CAAlC,EAAqC;MACnCJ,QAAQ,CAAC;QACPP,IAAI,EAAE;MADC,CAAD,CAAR;IAGD;EACF,CAbD;;EAeA,MAAMY,OAAO,GACXP,KAAK,CAACO,OAAN,KAAkB,OAAlB,gBACE;IACE,EAAE,EAAEP,KAAK,CAACQ,EADZ;IAEE,IAAI,EAAER,KAAK,CAACL,IAFd;IAGE,WAAW,EAAEK,KAAK,CAACS,WAHrB;IAIE,QAAQ,EAAEN,YAJZ;IAKE,KAAK,EAAEF,UAAU,CAACL,KALpB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,gBASE;IACE,EAAE,EAAEI,KAAK,CAACQ,EADZ;IAEE,IAAI,EAAER,KAAK,CAACU,IAAN,IAAc,CAFtB;IAGE,QAAQ,EAAEP,YAHZ;IAIE,KAAK,EAAEF,UAAU,CAACL,KAJpB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVJ;EAkBA,oBACE;IACE,SAAS,EAAG,gBACV,CAACK,UAAU,CAACJ,OAAZ,IAAuB,uBACxB,EAHH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAKE;IAAO,OAAO,EAAEG,KAAK,CAACQ,EAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA2BR,KAAK,CAACW,KAAjC,CALF,EAMGJ,OANH,EAOG,CAACN,UAAU,CAACJ,OAAZ,iBAAuB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIG,KAAK,CAACY,SAAV,CAP1B,CADF;AAWD,CAlDD;;AAoDA,eAAeb,KAAf"},"metadata":{},"sourceType":"module"}