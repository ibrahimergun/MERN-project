{"ast":null,"code":"var _jsxFileName = \"/Users/diablo/Desktop/git/MERN-project/frontend/src/user/pages/Users.js\";\nimport React, { useState, useEffect } from 'react';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport useHttpClient from '../../shared/hook/http-hook';\nimport UsersList from '../components/UsersList';\n\nconst Users = () => {\n  const [sendRequest, errorHandler, loading, errorMessage, responseData] = useHttpClient(); //const [loading, setLoading] = useState(true);\n\n  const [USERS, setUSERS] = useState([]); //const [errorMessage, setErrorMessage] = useState();\n\n  useEffect(() => {\n    sendRequest('http://localhost:5000/api/users');\n    setUSERS(responseData.users);\n  }, [responseData.users, sendRequest]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: errorMessage,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), loading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }), !loading && USERS && /*#__PURE__*/React.createElement(UsersList, {\n    items: USERS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }));\n};\n\nexport default Users;","map":{"version":3,"names":["React","useState","useEffect","LoadingSpinner","ErrorModal","useHttpClient","UsersList","Users","sendRequest","errorHandler","loading","errorMessage","responseData","USERS","setUSERS","users"],"sources":["/Users/diablo/Desktop/git/MERN-project/frontend/src/user/pages/Users.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport useHttpClient from '../../shared/hook/http-hook';\n\nimport UsersList from '../components/UsersList';\n\nconst Users = () => {\n\n  const [sendRequest, errorHandler, loading, errorMessage, responseData] = useHttpClient();\n\n  //const [loading, setLoading] = useState(true);\n  const [USERS, setUSERS] = useState([]);\n  //const [errorMessage, setErrorMessage] = useState();\n  \n\n  useEffect(() => {\n    sendRequest('http://localhost:5000/api/users');\n    setUSERS(responseData.users)      \n  }, [responseData.users, sendRequest]);\n \n  return (\n    <React.Fragment>\n      <ErrorModal error={errorMessage} onClear={errorHandler} />\n      {loading && <LoadingSpinner asOverlay />}\n      {!loading && USERS && <UsersList items={USERS} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n\n\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAElB,MAAM,CAACC,WAAD,EAAcC,YAAd,EAA4BC,OAA5B,EAAqCC,YAArC,EAAmDC,YAAnD,IAAmEP,aAAa,EAAtF,CAFkB,CAIlB;;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC,CALkB,CAMlB;;EAGAC,SAAS,CAAC,MAAM;IACdM,WAAW,CAAC,iCAAD,CAAX;IACAM,QAAQ,CAACF,YAAY,CAACG,KAAd,CAAR;EACD,CAHQ,EAGN,CAACH,YAAY,CAACG,KAAd,EAAqBP,WAArB,CAHM,CAAT;EAKA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAD;IAAY,KAAK,EAAEG,YAAnB;IAAiC,OAAO,EAAEF,YAA1C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAEGC,OAAO,iBAAI,oBAAC,cAAD;IAAgB,SAAS,MAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFd,EAGG,CAACA,OAAD,IAAYG,KAAZ,iBAAqB,oBAAC,SAAD;IAAW,KAAK,EAAEA,KAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHxB,CADF;AAOD,CArBD;;AAuBA,eAAeN,KAAf"},"metadata":{},"sourceType":"module"}